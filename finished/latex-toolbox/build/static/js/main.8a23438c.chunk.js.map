{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Sider","Header","Content","Footer","InputGroup","Group","ButtonGroup","$$","id","document","getElementById","getElementsByTagName","innerHTML","script","createElement","setAttribute","appendChild","islock","TEXT","input_value","is_show_guide","show_guide","value","renderer","is_left_hide","source","target","replace","tagName","toLowerCase","window","MathJax","Hub","Queue","preview_math","show_table","style","display","excel2table","data","rows","match","length","str_arr","split","pop","columns","this","data_format","str","padEnd","alert","simple_format","lc","latex_format_maple","is_coeff","latex_code","discrete_latex_format_maple","set_input_format_latex","is_discrete","old_code","set_input_format_szce","eqs","map","eq","eq1","test","is_match","V_ij_x","slice","move_V_ij_x_2_left","move_V_ij_2_left","format_szce","format_szce_relation","forEach","matchs","lhs","mt","DT_gauge","DT_coe","latex2maple","i","re1","RegExp","re2","addEventListener","minWidth","maxWidth","width","Table","state","onTextChange","event","Math","min","parseInt","setState","eleOnInput","eleOnBlur","eleOnFocus","create_inputs","input_rows","input_columns","j","push","flex","key","random","className","margin","onInput","onBlur","onFocus","flexDirection","n","max","table2matrix","eles","getElementsByClassName","ele","innerText","close_table","styles","table","position","top","left","right","background","float","Button","padding","textAlign","gutter","span","addonBefore","onChange","onClick","type","React","Component","Boolean","location","hostname","ReactDOM","render","diaplay","overflow","header","height","backgroundColor","overflowY","lineHeight","content","button","textarea","outline","border","output","userSelect","footer","tip","zIndex","btn_name","btn_click","btn_type","arr","floor","btn_arr","dashed","documentElement","clientHeight","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a23438c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport { Button, Layout, Divider, Input, Col, Row, Card } from 'antd';\nconst { Sider, Header, Content, Footer } = Layout;\nconst InputGroup = Input.Group;\nconst ButtonGroup = Button.Group;\n\n(function() {\n  document.getElementsByTagName('head')[0].innerHTML += `\n    <script type=\"text/x-mathjax-config\">\n            MathJax.Hub.Config({\n            messageStyle: 'none',\n            tex2jax: {inlineMath: [['$','$']], preview: 'none'},\n            \"HTML-CSS\": \n              {scale: 100},\n            TeX: { equationNumbers: { autoNumber: \"AMS\" }}});\n        </script>\n  `\n  var script = document.createElement('script');\n  script.setAttribute('type', \"text/javascript\");\n  script.setAttribute('src', \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML\");\n  document.getElementsByTagName('head')[0].appendChild(script);\n})();\n\nfunction $$(id) {\n    return document.getElementById(id);\n}\n\nvar islock = false;\n\n// 使用说明\nconst TEXT =  \n    `\n    功能: \n      可以实时预览数学公式(先输入数学环境)，以及excel数据\n      或者文件中复制的列表转列表，创建列表和矩阵。 \n    \n    excel数据转列表：   \n      输入框清空，将excel数据复制到输入框，点击转换按钮\n      即可. 要求不同行要换行，数据中无空格, \n      不同数据间有空格(或tab键)隔开.\n    \n    下面maple相关的功能均与方程族推导相关，其余问题未必可用\n    \n    连续公式格式化：\n      格式化maple生成的latex代码，去除冗余\n      将latex代码粘贴在输入框，点击格式化即可。\n    \n    展示系数格式化：\n      主要针对无穷展开同次幂系数。\n    \n    szce格式化：\n      连续静态零曲率方程格式化，并且输出各未知量的依赖关系。\n    \n    离散szce格式化：\n      离散静态零曲率方程格式化，并且输出各未知量的依赖关系。\n    \n    DT-gT: \n      指将gauge变换T代入T_x+TU=U_hatT.\n    \n    DT-coe:\n      指将gauge变换T代入T_x+TU=U_hatT后比较各式中lambda\n      各次幂系数所得等式\n\n    latex2maple:\n      将mathpix-snipping-tool通过图片识别生成的矩阵的latex代码\n      转化成maple中矩阵输入表达式， 主要针Lax对。\n\n    \n    双击： 左侧收起/恢复，\n    \n    注： 1.  个人用，不具有普适性，不保证完全正确。上面是未格式化的结果，\n        是正确的。\n         2.  仅支持latex数学公式，其它命令不支持。\n    `\nvar input_value = '';\nvar is_show_guide = true;\nfunction show_guide() {\n  if(is_show_guide) {\n    input_value = $$('input').value;\n    $$('input').value = TEXT;\n  } else {\n    $$('input').value = input_value;\n    renderer($$('input'), $$('output'));\n  }\n  is_show_guide = !is_show_guide;\n}\n\n// 双击左侧输入区收起\nvar is_left_hide = true;\ndocument.addEventListener('dblclick', function() {\n  if(is_left_hide) {\n    $$('left').style.display = 'none';\n    $$('sider').style.minWidth = '99%';\n    $$('sider').style.maxWidth = '99%';\n    $$('sider').style.width = '99%';\n  } else {\n    $$('left').style.display = 'block';\n    $$('sider').style.minWidth = '50%';\n    $$('sider').style.maxWidth = '50%';\n    $$('sider').style.width = '50%';\n  }\n  is_left_hide = !is_left_hide;\n});\n\n// !!!!!!!!!!!!!!!!!!!!!此处是关键， https://www.jianshu.com/p/20f137e2b8c9\nfunction renderer(source, target) {\n  if( islock ) return;\n  islock = true;\n  source.value = source.value.replace(/(beta|gamma)/g, '$1 ');\n  $$('buffer').innerHTML = source.value.replace(/\\n/g,\"<br />\");\n  if( source.tagName.toLowerCase() == 'input' ) {\n    $$('buffer').innerHTML = '$' + $$('buffer').innerHTML + '$';\n  }\n  window.MathJax.Hub.Queue(['Typeset', window.MathJax.Hub, $$('buffer')], [preview_math, target]);\n} \n\nfunction preview_math(target) {\n  islock = false;\n  target.innerHTML = $$('buffer').innerHTML;\n}\n\nfunction show_table() {\n  $$('table').style.display = 'block';\n  $$('tip').style.display = 'block';\n}\n\n// 根据输入区字符串生成表格\nfunction excel2table() {\n    let data = $$('input').value;\n    if( data === '') return;\n    // 判断最后一个字符是否为换行符，以确定行数。\n    let rows = data.match(/\\r\\n|\\n/g).length + 1;\n    let str_arr = data.split(/\\s+|\\t|\\n|\\r\\n/g);\n    if(data[data.length - 1] === '\\n') {\n        rows -= 1;\n        str_arr.pop();\n    }\n    let columns = str_arr.length/rows;\n    if(columns%1 != 0) {\n        alert('数据不规范');\n        return;\n    }\n    data = this.data_format(str_arr);\n    let str = ''.padEnd(2*columns, '|c');\n    $$('input').value += ('\\r\\n\\ \\r\\n\\\\begin{tabular}{' + str + '|}\\r\\n\\\\hline\\r\\n' + data + '\\\\hline\\r\\n\\\\end{tabular}');\n}\n\n\nfunction simple_format() {\n  let lc = $$('input').value;\n  lc = lc.replace(/\\n/g, '');\n    lc = lc.replace(/{\\\\it(.*?)}/g, '$1');   \n    lc = lc.replace(/\\\\noalign{\\\\medskip}/g, ' '); \n    lc = lc.replace(/(\\\\!)/g, ' '); \n    lc = lc.replace(/(\\s,)/g, '\\\\\\\\ '); \n    lc = '<hr><hr>\\r\\n\\r\\n 原结果：\\r\\n$$' + lc + '$$<hr>';\n    return lc;\n}\n\nfunction latex_format_maple(is_coeff) {\n  // is_coeff: 是否为无穷展式系数\n  let latex_code = $$('input').value;\n  // 去除换行符\n    latex_code = latex_code.replace(/\\n/g, '');\n    latex_code = latex_code.replace(/,0,/g, ',');\n    // 修正(偏)导数\n    // 对常数求导\n    // {\\frac {\\rm d}{{\\rm d}x}} \\left( 1 \\right)\n    latex_code = latex_code.replace(/[+-]?{\\\\frac\\s{\\\\rm\\sd}{{\\\\rm\\sd}\\w}}\\s\\\\left\\(\\s[0-9]+\\s\\\\right\\)/g, ' ');\n\n    // 一阶与高阶偏导数， \n    // {\\frac {\\partial }{\\partial x}} \\left( w{\\it b31} \\left( x,t \\right)  \\right)\n    latex_code = latex_code.replace(/{\\\\frac {\\\\partial }{\\\\partial (\\w)}} \\\\left\\( (.*?) (\\\\left\\( x,t \\\\right\\).*?)\\\\right\\)/g, '($2 $3)_{$1}');\n    // latex_code = latex_code.replace(/{\\\\frac\\s{\\\\partial\\s\\^{(\\d+)}}{\\\\partial\\s{(\\w)}\\^{\\d+}}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$3_{$1$2} $4');\n\n    // 一阶与高阶偏导数\n    // {\\frac {\\partial }{\\partial x}} { w{\\it b31} } \\left( x,t \\right)\n    latex_code = latex_code.replace(/{\\\\frac\\s{\\\\partial\\s}{\\\\partial\\s(\\w)}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$2_{$1} $3');\n    latex_code = latex_code.replace(/{\\\\frac\\s{\\\\partial\\s\\^{(\\d+)}}{\\\\partial\\s{(\\w)}\\^{\\d+}}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$3_{$1$2} $4');\n\n    // 一阶与高阶偏导数\n    latex_code = latex_code.replace(/{\\\\frac\\s{\\\\rm d}{{\\\\rm d}(\\w)}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$2_{$1} $3');\n    latex_code = latex_code.replace(/{\\\\frac\\s{{\\\\rm d}\\^{(\\d+)}}{{\\\\rm d}{(\\w)}\\^{\\d+}}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$3_{$1$2} $4');\n    latex_code = latex_code.replace(/{\\\\frac\\s{\\\\partial\\s\\^{\\d}}{\\\\partial\\s(\\w)\\\\partial\\s(\\w)}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$3_{$1$2} $4');\n\n    // 一阶或高阶混合偏导数\n    latex_code = latex_code.replace(/{\\\\frac\\s{\\\\partial\\s\\^{\\d+}}{\\\\partial\\s(\\w)\\\\partial\\s{(\\w)}\\^{(\\d+)}}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$4_{$1$3$2} $5');\n    latex_code = latex_code.replace(/{\\\\frac\\s{\\\\partial\\s\\^{\\d+}}{\\\\partial\\s{(\\w)}\\^{(\\d+)}\\\\partial\\s(\\w)}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$4_{$2$1$3} $5');\n    latex_code = latex_code.replace(/{\\\\frac\\s{\\\\partial\\s\\^{\\d+}}{\\\\partial\\s{(\\w)}\\^{(\\d+)}\\\\partial\\s{(\\w)}\\^{(\\d+)}}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$5_{$2$1$4$3} $6');\n   \n   if(is_coeff === '1') {\n      // D_2(A)(0, x) --> A_{0, x}\n      latex_code = latex_code.replace(/D_{{\\d}}\\s+\\\\left\\(\\s+(\\w)\\s+\\\\right\\)\\s+\\\\left\\(\\s+(\\d),(\\w)\\s+\\\\right\\)/g, '$1_{$2,$3}');\n      // A(2, x) --> A_2.\n      latex_code = latex_code.replace(/(\\w)\\s+\\\\left\\(\\s+(\\d),\\w\\s+\\\\right\\)/g, '$1_{$2}');\n      latex_code = latex_code.replace(/\\s,/g, ' =0, \\\\\\\\');\n    }\n    // Vij --> V_{ij}\n    latex_code = latex_code.replace(/([a-zA-Z]+)(\\d+)/g, '$1_{$2}'); \n    // 删除(x), (x, t, ..)\n    latex_code = latex_code.replace(/\\\\left\\(\\s[a-z](,[a-z]){0,}\\s\\\\right\\)/g, ' ');\n    // 冗余\n    latex_code = latex_code.replace(/{\\\\it(.*?)}/g, '$1');   \n    latex_code = latex_code.replace(/\\\\noalign{\\\\medskip}/g, ' '); \n    latex_code = latex_code.replace(/(\\\\,|\\\\!)/g, ' '); \n    // {{i}} --> {i}.\n    latex_code = latex_code.replace(/{({\\w})}/g, '$1');\n    // (A_{x}) or (A) -->  A_{x} or A.\n    latex_code = latex_code.replace(/\\\\left\\(\\s+(\\w(_{\\w+}|))\\s+\\\\right\\)\\s+([^\\^])/g, '$1 $3');\n    // (A_{x})^i or (A)^i -->  A^i_{x} or A^i.    \n    latex_code = latex_code.replace(/\\\\left\\(\\s+(\\w(_{\\w+}|))\\s+\\\\right\\)\\s+\\^({\\d+})/g, '$1^$3');\n    // V_{x}_{y} --> V_{x, y}\n    latex_code = latex_code.replace(/([a-zA-Z]+)_{(\\w+)}_{(\\w+)}/g, '$1_{$2,$3}');\n    latex_code = latex_code.replace(/\\s,/g, '   \\\\\\\\   ');\n    latex_code = latex_code.replace(/\\\\\\\\\\s+\\\\\\\\/g, '\\\\\\\\');\n    latex_code = latex_code.replace(/\\s{2,}/g, ' ');\n    return latex_code;\n}\n\nfunction discrete_latex_format_maple() {\n  let latex_code = $$('input').value;\n    latex_code = latex_code.replace(/\\n/g, '');\n    latex_code = latex_code.replace(/([a-zA-Z]+)(\\d+)/g, '$1_{$2}'); \n    latex_code = latex_code.replace(/{\\\\it(.*?)}/g, '$1');\n    latex_code = latex_code.replace(/\\\\noalign{\\\\medskip}/g, ' '); \n    latex_code = latex_code.replace(/(\\\\,|\\\\!)/g, ' '); \n    latex_code = latex_code.replace(/\\s,/g, '   \\\\\\\\   ');\n    latex_code = latex_code.replace(/\\s{2,}/g, ' ');\n    // A(n+1)==> A^+\n    latex_code = latex_code.replace(/\\\\left\\(\\sn\\s\\\\right\\)/g, '');\n    latex_code = latex_code.replace(/\\\\left\\(\\sn([+-])1\\s\\\\right\\)/g, '^{$1}');\n    latex_code = latex_code.replace(/\\\\left\\(\\sn([+-])2\\s\\\\right\\)/g, '^{$1$1}');\n    latex_code = latex_code.replace(/\\\\left\\(\\sn([+-])3\\s\\\\right\\)/g, '^{$1$1$1}');\n    return latex_code;\n}\n\n\nfunction set_input_format_latex(is_coeff, is_discrete) {\n  let latex_code;\n  if(is_discrete === '1') {\n    latex_code = discrete_latex_format_maple();\n  } else{\n    latex_code = latex_format_maple(is_coeff);\n  }\n    let old_code = simple_format();\n    $$('input').value =  old_code + ('\\r\\n\\r\\n\\r\\n转换结果：\\r\\n \\r\\n\\r\\n$' + latex_code + '$');\n    renderer($$('input'), $$('output'));\n}\n\nfunction set_input_format_szce(is_discrete) {\n  // szce(静态零曲率方程)格式化(n>2)\n  let lc;\n  if(is_discrete === '1') {\n    lc = discrete_latex_format_maple();\n  } else{\n    lc = latex_format_maple('0');\n  }\n  lc = lc.replace(/\\s/g, '');\n  \n  lc = lc.replace(/.*?{array}{.*?}(.*)\\\\end.*/, '$1');\n  lc = lc.replace(/\\\\lambda/g, '\\\\lambda ');\n  lc = lc.replace(/\\\\\\\\/g,'&').split('&');\n  // 将导数项 V_{ij, x}，及 V_{ij}分别移到左端\n  let eqs;\n  if(is_discrete === '0') {\n    eqs = lc.map(eq => {\n        let eq1 = move_V_ij_x_2_left(eq), \n            eq2 = move_V_ij_2_left(eq1);\n        return [eq1, eq2];\n    })\n  } else {\n    eqs = lc.map(eq => [eq, move_V_ij_2_left(eq)]);\n  }\n\n  let format_szce = '',\n      format_szce_relation = '';\n  eqs.forEach(eq => {\n    format_szce += '&' + eq[0] + '=0,\\\\\\\\ \\r\\n';\n    format_szce_relation += eq[1];\n  })\n  format_szce = '\\\\begin{align}\\r\\n' + format_szce + '\\\\end{align}';\n  format_szce_relation = '\\\\begin{align}\\r\\n' + format_szce_relation + '\\\\end{align}';\n  let old_code = simple_format();\n    $$('input').value =  old_code + '\\r\\n\\r\\n' + format_szce + '\\r\\n\\r\\n<hr><hr>' + '依赖关系:\\r\\n';\n  $$('input').value = $$('input').value + '$' + format_szce_relation + '$<hr><hr>';\n    renderer($$('input'), $$('output'));\n}\nfunction move_V_ij_x_2_left(eq) {\n  // 将 V_{ij, x}移到左端。\n  // 判断是否已经在左端\n  if( /^[^-+]*?\\w_\\{\\d\\d,\\w\\}/.test(eq) ) return eq;\n  // 约去系数\n  // eq = eq.replace(/-?[^+-]*?\\\\left\\((.*?)\\\\right\\)/g, '$1');\n  if(eq[0] != '-') {\n    eq = '+' + eq;\n  }\n  let is_match = eq.match(/[+-][^+-]*?\\w_\\{\\d\\d,\\w\\}[^+-]*?/), V_ij_x = '';\n  if(is_match != null) {\n    V_ij_x = is_match[0];\n    eq = eq.replace(is_match[0], '');\n  }\n  if(V_ij_x[0] === '+') { \n    V_ij_x = V_ij_x.slice(1); \n  }\n  return V_ij_x + eq;\n}\nfunction move_V_ij_2_left(eq) {\n  // szce各变量依赖关系, 主要是将 V_{ij}移到等式左端。\n  eq += ' ';\n  let matchs = eq.match(/(-|\\+)V_{\\d\\d}(?=(\\+|\\s|-))/g);\n  let lhs = '';\n  if(matchs) {\n    matchs.forEach(mt => {\n      lhs += '-' + mt\n      eq = eq.replace(mt, '');\n    })\n  }\n  eq = '&' + lhs + '=' + eq + ',\\\\\\\\ \\r\\n';\n  eq = eq.replace(/--/g, '+');\n  eq = eq.replace(/-\\+/g, '-');\n  if(eq[1] == '+') {\n    eq = '&' + eq.slice(2, eq.length);\n  } else if(eq[1] == '=') {\n    eq = '';\n  }\n  return eq;\n}\n\n//  指将gauge变换T代入T_x+TU=U_hatT.\nfunction DT_gauge() {\n  let lc = latex_format_maple('0');\n  lc = lc.replace(/H(\\w)/g, '\\\\hat{$1}');\n  lc = lc.replace(/\\s/g, '');\n  lc = lc.replace(/&/g, '=0,\\\\\\\\&');\n  lc = lc.replace(/\\\\\\\\([^&])/g, '=0,\\\\\\\\&$1');\n  lc = lc.replace(/\\\\left\\[\\\\begin{array}{\\w+}(.*?)\\\\end{array}\\\\right\\]/, '\\\\begin{align}& $1=0.\\\\end{align}');\n  lc = lc.replace(/\\\\lambda/g, '\\\\lambda ');\n\n    let old_code = simple_format();\n    $$('input').value = old_code + ('\\r\\n\\r\\n\\r\\n$' + lc + '$');\n    renderer($$('input'), $$('output'));\n}\n\n//  指将gauge变换T代入T_x+TU=U_hatT后比较各式中lambda\n//  各次幂系数所得等式\nfunction DT_coe() {\n  let lc = latex_format_maple('0');\n  lc = lc.replace(/H(\\w)/g, '\\\\hat{$1}');\n\n  lc = lc.slice(1, lc.length - 1);\n  lc = lc.replace(/\\\\\\\\/g, '=0, \\\\\\\\\\r\\n&');\n  lc = lc.replace(/((\\s|\\+|-))_{x}/g, '$1 0');\n  lc = `\\\\begin{align}&${lc}=0.\\\\end{align}`; \n\n    let old_code = simple_format();\n    $$('input').value = old_code + ('\\r\\n\\r\\n\\r\\n$' + lc + '$');\n    renderer($$('input'), $$('output'));\n}\n\nfunction latex2maple() {\n// lc: matrix's latex_code, created by mathpix-snipping-tool.exe\n// return: Matrix of maple。\n  let lc = $$('input').value.replace(/.*\\\\begin{array}{.*?}(.*)\\\\end.*/, '$1');\n  lc = 'Matrix([[' + lc + ']])';\n  lc = lc.replace(/zeta/g, 'lambda');\n  lc = lc.replace(/\\\\mathrm{i}/g, ' I '); // 复数i\n  lc = lc.replace(/&/g, ', ');\n  lc = lc.replace(/\\\\\\\\/g, '], [');\n  lc = lc.replace(/\\\\(left|right)/g, '');\n\n  // x^{-3} --> x^(-3)\n  lc = lc.replace(/\\^{(-?\\d)}/g, '^($1)');\n  // \\lambda --> lambda\n  lc = lc.replace(/\\\\lambda/g, 'lambda');\n  // \\frac{2a}{2b} --> 2a/2b\n  lc = lc.replace(/\\\\frac{(\\w+)}{(\\w+)}/g, '($1)/($2)');\n  // w_{12} --> w12(x, t)\n  lc = lc.replace(/(\\w)_{(\\d+)}/g, '$1$2(x, t)');\n  // w_{x} --> diff(w(x, t), x);\n  lc = lc.replace(/(\\w)_{(\\w)}/g, 'diff($1(x, t), $2)');\n  // w_{12, xx} --> diff(w12, x$2)\n  // w_{xx}   --> diff(w, x$2)\n  for(let i=1; i<6; i++) {\n    let re1 = RegExp(`(\\\\w)_{(\\\\d+)(\\\\s\\\\w){${i}}}`, 'g'), \n      re2 = RegExp(`(\\\\w)_{(\\\\w)(\\\\s\\\\w){${i}}}`, 'g');\n    lc = lc.replace(re1, `diff($1$2(x, t), $3$$${i})`);\n    lc = lc.replace(re2, `diff($1(x, t), $2$$${i+1})`);\n  }\n  lc = lc.replace(/({|})/g, '');\n\n  $$('input').value += '\\r\\n\\r\\n' + lc;\n}\n\n\n\n\nclass Table extends React.Component {\n    state = {\n        rows: 3,\n        columns: 4,\n        display: 'none',\n    }\n\n    onTextChange = (event) => {\n      let value = Math.min( parseInt(event.target.value), 10 );\n        if( event.target.id == 'row' ) {\n            this.setState({ rows : value });\n        } else {\n            this.setState({ columns: value });\n        }\n    }\n\n    eleOnInput = (event) => {\n      renderer( event.target, $$('tip') );\n    }\n\n    eleOnBlur = (event) => {\n      event.target.innerHTML = '';\n    }\n\n    eleOnFocus = (event) => {\n      renderer( event.target, $$('tip') );\n    }\n\n    create_inputs = () => {\n        let rows = this.state.rows;\n        let columns = this.state.columns;\n        let input_rows = [];\n        for(let i=0; i<rows; i++) {\n            let input_columns = [];\n            for(let j=0; j<columns; j++) {\n                input_columns.push(\n                    <Col style={{ flex: '1' }} key={ Math.random() }>\n                        <Input className='ele' style={{ margin: '5px' }} onInput={ this.eleOnInput } onBlur={ this.eleOnBlur } onFocus={ this.eleOnFocus }/>\n                    </Col> )\n            }\n            input_rows.push( <Row style={{ display: 'flex', flexDirection: 'row' }} key={ Math.random() }>{ input_columns }</Row> )\n        }\n        return ( <InputGroup style={{ width: '98%' }}>{ input_rows }</InputGroup> );\n    }\n    \n\n    // 格式化数据\n    data_format = (str_arr) => {\n        // input: str_arr = ['1', '22', '333', '2222'];\n        // output: 1    &  22   \\\\\n        //         333  &  2222 \\\\\n        let rows = this.state.rows;\n        let columns = this.state.columns;\n        let n = Math.max( ...str_arr.map( str => str.length ) ); // 数组中字符串最大长度\n        let data = '';\n        for(let i=0; i<rows; i++) {\n            for(let j=0; j<columns - 1; j++) {\n                data += str_arr[i*columns + j].padEnd(n, ' ') + ' & ';\n            }\n            data += (str_arr[i*columns + columns - 1].padEnd(n, ' ') + ' \\\\\\\\\\r\\n');\n        }\n        return data;\n    }\n\n    // 根据输入框中内容，生成矩阵或列表\n    table2matrix = () => {\n        let eles = document.getElementsByClassName('ele');\n        let str_arr = [];\n        for(let ele of eles) {\n            str_arr.push(ele.value || '0');\n        }\n        let data = this.data_format(str_arr);\n        if( window.event.target.innerText == '生成矩阵' ) {\n            $$('input').value += ('\\r\\n$$\\r\\n\\\\left(\\r\\n\\\\begin{matrix}\\r\\n' + data + '\\\\end{matrix}\\r\\n\\\\right)\\r\\n$$');\n            renderer($$('input'), $$('output'));\n        }else {\n            let str = ''.padEnd(2*this.state.columns, '|l');\n            $$('input').value += ('\\r\\n\\\\begin{tabular}{' + str + '|}\\r\\n\\\\hline\\r\\n' + data + '\\\\hline\\r\\n\\\\end{tabular}');\n        }\n    }\n    \n    close_table = () => {\n        $$('table').style.display = 'none';\n        $$('tip').style.display = 'none';\n    }\n\n    render() {\n        let styles = {\n            table: {\n                position: 'absolute',\n                width: '540px',\n                top: '150px',\n                left: '0',\n                right: '0',\n                margin: '0 auto',\n                display: this.state.display, \n                background: 'white'\n            },\n            InputGroup: { float: 'left', maxWidth: '200px', top: '4px', left: '10px'}, \n            Button: { margin: '4px', padding: '5px 10px' }\n        }\n\n        return (\n            <Card id='table' style={ styles.table }>\n                <div id='button_container' style={{ position: 'relative', left: '0', top: '0', textAlign: 'center'}}>\n                    <InputGroup style={ styles.InputGroup }>\n                        <Row gutter={6}>\n                            <Col span={12}>\n                                <Input id='row' addonBefore='行' onChange={ this.onTextChange } value={ this.state.rows } key='100'/>\n                            </Col>\n                            <Col span={12}>\n                                <Input id='column' addonBefore='列' onChange={ this.onTextChange } value={ this.state.columns } key='101'/>\n                            </Col>\n                        </Row>\n                    </InputGroup>\n                    <ButtonGroup style={{ left: '25px' }}>\n                        <Button style={ styles.Button } onClick={ this.table2matrix } type='danger'>生成矩阵</Button>\n                        <Button style={ styles.Button } onClick={ this.table2matrix } type='default'>生成列表</Button>\n                        <Button style={ styles.Button } onClick={ this.close_table }  type='primary'>关闭</Button>\n                    </ButtonGroup>\n                </div>\n                <div id='inputs'>\n                    { this.create_inputs() }\n                </div>\n            </Card>\n        );\n    }\n}\n\n\n\n\nexport default () => {\n  const styles = {\n    left: { \n      width: '50%', \n      diaplay: 'bolck',\n      overflow: 'hidden'\n    },\n    header: {\n          height: '13%', \n          backgroundColor: 'white', \n          overflowY: 'scroll', \n          lineHeight: '20px', \n          padding: '10px',                \n      }, \n      content: { \n        backgroundColor: 'white',\n        height: '80%'\n      },\n      button: {\n      margin: '2px',\n      padding: '5px 10px',\n    },\n    textarea: { \n      width: '100%', \n      height: '100%', \n      padding: '10px 10px', \n      outline: 'none', \n      border: 'none' \n    }, \n    output: { \n      width: '100%', \n      height: '100%', \n      background: 'white', \n      padding: '20px 40px',\n      userSelect: 'none',\n      overflowY: 'scroll',\n      userSelect: 'none',\n    },\n    footer: { \n      textAlign: 'center', \n      height:  '7%',\n      padding: '15px 0' \n    }, \n    tip: {\n      position: 'absolute',\n      height: '30px',\n      top: '130px',\n      left: '0',\n      right: '0',\n      margin: '0 auto',\n      textAlign: 'center',\n      zIndex: '2',\n      display: 'none'\n    }\n  }\n  var continuous_formula = () =>{ set_input_format_latex(\"0\", \"0\") };\n  var discrete_formula = () =>{ set_input_format_latex(\"0\", \"1\") };\n  var coeff_formula = () =>{ set_input_format_latex(\"1\", \"0\") };\n  var continuous_szce_formula = () =>{ set_input_format_szce(\"0\") };\n  var discrete_szce_formula = () =>{ set_input_format_szce(\"1\") };\n  var inputOnchange = () => { renderer($$('input'), $$('output')) };\n  const btn_name = ['使用说明', '创建矩阵', 'Excel转列表', '连续公式格式化', '离散公式格式化', '展式系数格式化', 'szce格式化', '离散szce格式化', 'DT-gT', 'DT-coe', 'latex2maple'];\n  const btn_click = [show_guide, show_table, excel2table, continuous_formula, discrete_formula, coeff_formula, continuous_szce_formula, discrete_szce_formula, DT_gauge, DT_coe, latex2maple];\n  const btn_type = ['primary', 'default', 'danger', 'dashed'];\n  const btn_arr = () => {\n    let n = btn_name.length;\n    let arr = [];\n    for( let i=0; i<n; i++ ) {\n      arr.push( \n        <Button style={ styles.button } \n          onClick={ btn_click[i] }\n          type={ btn_type[Math.floor(i%4)] } \n          key={ i }>{ btn_name[i] }\n        </Button> );\n    }\n    return arr;\n  }\n\n    return (\n      <div>\n        <Layout>\n            <Layout id='left' style={ styles.left }>\n              <Header style={ styles.header }>\n                <div>{ btn_arr() }</div>\n              </Header>\n\n              <Divider dashed style={{ margin: '2px 0' }}/>\n\n              <Content style={ styles.content }>\n            <textarea id='input' style={ styles.textarea } onInput={ inputOnchange }>\n            </textarea>\n              </Content>\n\n              <Footer style={ styles.footer }>\n                Toolbox ©2019 Created by JMx<br />\n              </Footer>\n            </Layout>\n\n            <Divider dashed style={{ margin: '0 2px' }} type='vertical' />\n\n            <Sider id='sider' width='50%' style={{ height: document.documentElement.clientHeight + 'px' }}>\n          <div id='output' style={ styles.output }></div>\n            </Sider>\n        </Layout>\n        \n        <div id='buffer' style={{ display: 'none' }}></div>\n        <div id='tip' style={ styles.tip }></div>\n        <Table />\n      </div>\n    );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}